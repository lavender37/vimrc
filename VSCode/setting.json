{
    // Settting for Vscode editor
    "update.enableWindowsBackgroundUpdates": false,
    "update.mode": "manual",
    "files.defaultLanguage": "markdown",
    "files.trimTrailingWhitespace": true,
    "editor.wordWrap": "off",
    "editor.fontSize": 14,
    "editor.tabCompletion": "on",
    "editor.guides.bracketPairs": true, // show the color of bracket of 1
    "editor.bracketPairColorization.enabled": true, // show the color of bracket of 2
    "editor.guides.bracketPairsHorizontal": "active", // show the line between bracket
    "editor.parameterHints.enabled": false,
    "editor.quickSuggestions": {
        "other": true,
        "comments": false,
        "strings": true
    },
    "git.ignoreMissingGitWarning": true,
    "git.path": "D:/SystemTools/PortableGit/bin/git.exe",
    "debug.javascript.defaultRuntimeExecutable": {
        "pwa-node": "D:/SystemTools/Nodejs/node-v16.13.1-win-x64/node.exe"
    },
    "terminal.integrated.inheritEnv": true,
    "terminal.integrated.env.windows": {},
    "terminal.integrated.scrollback": 100000,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "extensions.ignoreRecommendations": true,
    "editor.formatOnSave": true,
    "terminal.integrated.copyOnSelection": true,
    "editor.defaultFormatter": "ms-vscode.cpptools",
    "security.workspace.trust.emptyWindow": true,
    "security.workspace.trust.banner": "always",
    "security.workspace.trust.enabled": false,
    "security.workspace.trust.startupPrompt": "always",
    "security.workspace.trust.untrustedFiles": "newWindow",
    "C_Cpp.formatting": "clangFormat",
    "C_Cpp.default.includePath": [
        "D:/SystemTools/llvm-mingw-20210816-msvcrt-x86_64/include",
        "D:/SystemTools/llvm-mingw-20210816-msvcrt-x86_64/lib/clang/13.0.0/include/",
        "D:/SystemTools/llvm-mingw-20210816-msvcrt-x86_64/include/c++/v1",
        "C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.1/include",
    ],
    // style options Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, Microsoft, GNU, none
    "C_Cpp.clang_format_fallbackStyle": "Visual Studio", // style when there is no file
    "C_Cpp.clang_format_style": "file",
    "C_Cpp.default.cppStandard": "c++20",
    "C_Cpp.default.windowsSdkVersion": "",
    "remote.SSH.remotePlatform": {
        "docker_Latex": "linux",
        "192.168.1.7": "linux"
    },
    // Setting for cmake
    "cmake.buildTask": false,
    "cmake.configureOnEdit": false,
    "cmake.touchbar.visibility": "hidden",
    "cmake.environment": {
        "PATH": "D:/SystemTools/llvm-mingw-20210816-msvcrt-x86_64/bin;${env:PATH}"
    },
    "cmake.configureEnvironment": {
        "PATH": "D:/SystemTools/llvm-mingw-20210816-msvcrt-x86_64/bin;${env:PATH}"
    },
    "cmake.cmakePath": "D:/SystemTools/cmake-3.21.5-windows-x86_64/bin/cmake.exe",
    // "cmake.additionalKits": [
    //     "D://SystemTools//llvm-mingw-20210816-msvcrt-x86_64//bin//gcc.exe",
    //     "D://SystemTools//llvm-mingw-20210816-msvcrt-x86_64//bin//clang.exe",
    //     "D://SystemTools//llvm-mingw-20210816-msvcrt-x86_64//bin//g++.exe",
    //     "D://SystemTools//llvm-mingw-20210816-msvcrt-x86_64//bin//clang++.exe"
    // ],
    "cmake.configureSettings": {
        "CMAKE_TOOLCHAIN_FILE": "D:/SystemTools/vcpkg/scripts/buildsystems/vcpkg.cmake"
    },
    "cmake.autoSelectActiveFolder": false,
    // Setting for json
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    // Setting for LATEX
    // Extension List : james-yu.latex-workshop,ms-vscode-remote.remote-containers
    "latex-workshop.message.error.show": false,
    "latex-workshop.latex.outDir": "../build",
    "latex-workshop.message.warning.show": false,
    "latex-workshop.intellisense.package.enabled": true,
    "latex-workshop.latex.autoClean.run": "onFailed",
    "latex-workshop.latex.autoBuild.run": "never",
    "latex-workshop.view.pdf.ref.viewer": "auto",
    "latex-workshop.view.pdf.viewer": "tab",
    //"latex-workshop.view.pdf.viewer": "external",
    //"latex-workshop.view.pdf.ref.viewer": "external",
    //"latex-workshop.view.pdf.external.viewer.command":"D:/SystemTools/SumatraPDF-3.3.3-64/SumatraPDF-3.3.3-64.exe",
    // "latex-workshop.view.pdf.external.viewer.args": [
    //     "-forward-search",
    //     "%TEX%",
    //     "%LINE%",
    //     "-reuse-instance",
    //     "-inverse-search",
    //     "/"C:/Program Files/Microsoft VS Code/Code.exe/" /"C:/Program Files/Microsoft VS Code/resources/app/out/cli.js/" -gr /"%f/":/"%l/"",
    //     "%PDF%"
    // ],
    // "latex-workshop.view.pdf.external.synctex.command": "D:/SystemTools/SumatraPDF-3.3.3-64/SumatraPDF-3.3.3-64.exe",
    // "latex-workshop.view.pdf.external.synctex.args": [
    //     "-forward-search",
    //     "%TEX%",
    //     "%LINE%",
    //     "-reuse-instance",
    //     "-inverse-search",
    //     "/"C:/Program Files/Microsoft VS Code/Code.exe/" /"C:/Program Files/Microsoft VS Code/resources/app/out/cli.js/" -gr /"%f/":/"%l/"",
    //     "%PDF%",
    // ],
    "latex-workshop.latex.recipes": [
        {
            "name": "xelatex",
            "tools": [
                "xelatex"
            ]
        },
        {
            "name": "pdflatex",
            "tools": [
                "pdflatex"
            ]
        },
        {
            "name": "xe->bib->xe->xe",
            "tools": [
                "xelatex",
                "bibtex",
                "xelatex",
                "xelatex"
            ]
        },
        {
            "name": "pdf->bib->pdf->pdf",
            "tools": [
                "pdflatex",
                "bibtex",
                "pdflatex",
                "pdflatex"
            ]
        }
    ],
    "latex-workshop.latex.tools": [
        {
            "name": "xelatex",
            "command": "xelatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-shell-escape",
                "%DOCFILE%"
            ],
            "env": {}
        },
        {
            "name": "pdflatex",
            "command": "pdflatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOCFILE%"
            ],
            "env": {}
        },
        {
            "name": "bibtex",
            "command": "bibtex",
            "args": [
                "%DOCFILE%"
            ],
            "env": {}
        }
    ],
    // Setting for Python
    // Extension List : james-yu.latex-workshop,ms-vscode-remote.remote-containers
    "python.condaPath": "C:/Users/PC/miniconda3",
    "python.terminal.executeInFileDir": true,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "python.defaultInterpreterPath": "C:\\Users\\PC\\miniconda3\\envs\\tf2-py37\\python.exe",
    // Setting for matlab
    // Extension List : bat67.matlab-extension-pack
    //                  bramvanbilsen.matlab-code-run
    //                  gimly81.matlab
    //                  apommel.matlab-interactive-terminal
    //                  affenwiesel.matlab-formatter
    //                  slaier.matlab-complete
    // set the enviornment variluable for python
    // cd C:/Program Files/Polyspace/R2020a/extern/engines/python
    // run python setup.py install
    "[matlab]": {
        "editor.formatOnPaste": true,
        "editor.language.brackets": [
            [
                "[",
                "]"
            ],
            [
                "(",
                ")"
            ],
            [
                "{",
                "}"
            ]
        ],
        "editor.language.colorizedBracketPairs": [
            [
                "[",
                "]"
            ],
            [
                "(",
                ")"
            ],
            [
                "{",
                "}"
            ]
        ],
        "editor.suggestSelection": "recentlyUsedByPrefix",
        "editor.rulers": [
            75
        ],
        "files.encoding": "utf8"
    },
    "matlab.linterConfig": "",
    "matlab.linterEncoding": "utf8",
    "matlab.matlabpath": "C:/Program Files/Polyspace/R2020a/bin/win64",
    "matlab.mlintpath": "C:/Program Files/Polyspace/R2020a/bin/win64/mlint.exe",
    "[markdown]": {
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    "cmake.configureOnOpen": false,
    "[python]": {
        "editor.defaultFormatter": "ms-python.python"
    },
    "notebook.lineNumbers": "on",
    "[powershell]": {
        "editor.defaultFormatter": "ms-vscode.powershell"
    },
    // "matlab-interactive-terminal.pythonPath": "C:/Users/PC/miniconda3/envs/matlab_env/python.exe",
    // "matlab-formatter.pythonPath":"C:/Users/PC/miniconda3/envs/matlab_env/python.exe",
    // "matlab-formatter.indentwidth": 4
    // Setting for VIM
    // gd- 跳转到定义。
    // gq- 在视觉选择上重排和文字包装块的文本，保留注释风格。非常适合格式化文档注释。
    // gb- 在它找到的下一个单词上添加另一个光标，该单词与光标下的单词相同。
    // af- 可视模式命令，选择越来越大的文本块。例如，如果你有"blah （foo [bar 'ba|z']）"，那么它会首先选择'baz'。如果你再次按下，它会选择[bar 'baz']，如果你第三次这样做，它会选择"（foo [bar 'baz']）"。af
    // gh- 相当于将鼠标悬停在光标所在的任何位置。方便查看类型和错误消息，而无需触及鼠标！
    "vim.easymotion": true,
    "vim.replaceWithRegister": true, // replace with reg x usage : gr{motion} grr
    "vim.surround": true, // edit the surroud usage : cs"' ds" cs{[
    "vim.enableNeovim": false,
    "vim.sneak": false,
    "vim.camelCaseMotion.enable": true,
    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoindent": true,
    "vim.useSystemClipboard": true,
    "vim.autoSwitchInputMethod.defaultIM": "1033",
    "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\SystemTools\\im-select\\im-select.exe",
    "vim.autoSwitchInputMethod.switchIMCmd": "D:\\SystemTools\\im-select\\im-select.exe {im}", // vim按esc键自动切为英文
    "vim.debug.silent": false,
    "vim.incsearch": true,
    "vim.maxmapdepth": 1000,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "j"
            ],
            "after": [
                "<Esc>"
            ]
        },
        {
            "before": [
                "<Caps>"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        {
            "before": [
                "<CR>" // enter
            ],
            "after": [
                "A",
                "<CR>",
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "d"
            ],
            "after": [
                "d",
                "d"
            ]
        },
        {
            "before": [
                "<C-n>" // Ctrl+n
            ],
            "commands": [
                ":nohl"
            ]
        }
    ],
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-f>": false,
        "<C-i>": false
    }
}
