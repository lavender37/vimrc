{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// matlab
	"set subplot": {
		"scope": "matlab",
		"prefix": "sub",
		"body": [
			"subplot($1);",
			"plot($2);grid on;",
			"title('String');",
			"axis([Range]);",
			"xlabel('String');ylabel('String');"
		],
		"description": "snippet for plot"
	},
	"set autoclear": {
		"scope": "matlab",
		"prefix": "c",
		"body": "clear;close all;clc;",
		"description": "snippet for clear"
	},
	"comment_matlab": {
		"scope": "matlab",
		"prefix": "comment_line->matlab",
		"body": [
			"% *********************************************************************",
			"% *****      $1         *****",
			"% *********************************************************************"
		],
		"description": "MATLAB : Code snippet for *** comment"
	},
	// c
	"main": {
		"scope": "c,c++",
		"prefix": "main->c",
		"body": [
			"main(int argc, const char** argv) {",
			"    return 0;",
			"}"
		],
		"description": "CPP : Code snippet for 'for' loop"
	},
	"comment_cpp": {
		"scope": "c,c++",
		"prefix": "comment_line->cpp",
		"body": [
			"/*****************************************************************************",
			"* File:             $TM_FILENAME",
			"* Description:      n.a",
			"* Compile:          n.a",
			"* Run:              n.a",
			"* Argument:         n.a",
			"* TimeFileGenerate: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
			"* TimeLastModified: n.a",
			"*****************************************************************************/",
		],
		"description": "CPP : Code snippet for *** header"
	},
	// powershell
	"time": {
		"scope": "powershell",
		"prefix": "time for now",
		"body": [
			"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND"
		],
		"description": "get the time of yyyy-mm-dd hh:mm:ss"
	}
}
